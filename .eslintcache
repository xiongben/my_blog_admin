[{"/Users/xiongben/learnArea/my-blog/my-blog-admin/admin/src/pages/login.js":"1","/Users/xiongben/learnArea/my-blog/my-blog-admin/admin/src/router/router.js":"2","/Users/xiongben/learnArea/my-blog/my-blog-admin/admin/src/pages/adminIndex.js":"3","/Users/xiongben/learnArea/my-blog/my-blog-admin/admin/src/pages/addArticle.js":"4","/Users/xiongben/learnArea/my-blog/my-blog-admin/admin/src/index.js":"5","/Users/xiongben/learnArea/my-blog/my-blog-admin/admin/src/config/apiUrl.js":"6"},{"size":2647,"mtime":1607088026054,"results":"7","hashOfConfig":"8"},{"size":404,"mtime":1607079163084,"results":"9","hashOfConfig":"8"},{"size":2362,"mtime":1607079741650,"results":"10","hashOfConfig":"8"},{"size":7802,"mtime":1607141965819,"results":"11","hashOfConfig":"8"},{"size":459,"mtime":1607077179244,"results":"12","hashOfConfig":"8"},{"size":331,"mtime":1607141823384,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},"8cqup8",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/xiongben/learnArea/my-blog/my-blog-admin/admin/src/pages/login.js",["27","28"],"import React, { useState } from 'react';\nimport 'antd/dist/antd.css';\nimport { Card, Input, Icon, Button, Spin ,message} from 'antd';\nimport { KeyOutlined, UserOutlined } from '@ant-design/icons'\nimport \"./../static/css/login.css\";\nimport axios from 'axios'\nimport  servicePath from \"./../config/apiUrl\";\n\n\nfunction Login(props) {\n    const [userName, setUserName] = useState('')\n    const [password, setPassword] = useState('')\n    const [isLoading, setIsLoading] = useState(false)\n\n    const checkLogin = ()=>{\n        setIsLoading(true)\n\n        if(!userName){\n            message.error('用户名不能为空')\n            return false\n        }else if(!password){\n            message.error('密码不能为空')\n            return false\n        }\n        let dataProps = {\n            'userName':userName,\n            'password':password\n        }\n        axios({\n            method:'post',\n            url:servicePath.checkLogin,\n            data:dataProps,\n            withCredentials: true\n        }).then(\n           res=>{\n                setIsLoading(false)\n                console.log(res);\n                if(res.data.data=='登录成功'){\n                    \n                    localStorage.setItem('openId',res.data.openId)\n                    props.history.push('/index')\n                }else{\n                    message.error('用户名密码错误')\n                }\n           }\n        )\n\n        setTimeout(()=>{\n            setIsLoading(false)\n        },1000)\n    }\n\n    return (\n        <div className=\"login-div\">\n            <Spin tip=\"Loading...\" spinning={isLoading}>\n                <Card title=\"JSPang Blog  System\" bordered={true} style={{ width: 400 }} >\n                    <Input\n                        id=\"userName\"\n                        size=\"large\"\n                        placeholder=\"Enter your userName\"\n                        prefix={<UserOutlined  style={{ color: 'rgba(0,0,0,.25)' }} />}\n                        onChange={(e) => { setUserName(e.target.value) }}\n                    />\n                    <br /><br />\n                    <Input.Password\n                        id=\"password\"\n                        size=\"large\"\n                        placeholder=\"Enter your password\"\n                        prefix={<KeyOutlined  style={{ color: 'rgba(0,0,0,.25)' }} />}\n                        onChange={(e) => { setPassword(e.target.value) }}\n                    />\n                    <br /><br />\n                    <Button type=\"primary\" size=\"large\" block onClick={checkLogin} > Login in </Button>\n                </Card>\n            </Spin>\n        </div>\n    )\n}\nexport default Login","/Users/xiongben/learnArea/my-blog/my-blog-admin/admin/src/router/router.js",[],"/Users/xiongben/learnArea/my-blog/my-blog-admin/admin/src/pages/adminIndex.js",[],"/Users/xiongben/learnArea/my-blog/my-blog-admin/admin/src/pages/addArticle.js",["29","30","31"],"/Users/xiongben/learnArea/my-blog/my-blog-admin/admin/src/index.js",["32"],"/Users/xiongben/learnArea/my-blog/my-blog-admin/admin/src/config/apiUrl.js",[],{"ruleId":"33","severity":1,"message":"34","line":3,"column":23,"nodeType":"35","messageId":"36","endLine":3,"endColumn":27},{"ruleId":"37","severity":1,"message":"38","line":38,"column":33,"nodeType":"39","messageId":"40","endLine":38,"endColumn":35},{"ruleId":"33","severity":1,"message":"41","line":19,"column":12,"nodeType":"35","messageId":"36","endLine":19,"endColumn":22},{"ruleId":"33","severity":1,"message":"42","line":19,"column":23,"nodeType":"35","messageId":"36","endLine":19,"endColumn":36},{"ruleId":"43","severity":1,"message":"44","line":36,"column":7,"nodeType":"45","endLine":36,"endColumn":9,"suggestions":"46"},{"ruleId":"33","severity":1,"message":"47","line":5,"column":8,"nodeType":"35","messageId":"36","endLine":5,"endColumn":23},"no-unused-vars","'Icon' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'updateDate' is assigned a value but never used.","'setUpdateDate' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getTypeInfo'. Either include it or remove the dependency array.","ArrayExpression",["48"],"'reportWebVitals' is defined but never used.",{"desc":"49","fix":"50"},"Update the dependencies array to be: [getTypeInfo]",{"range":"51","text":"52"},[1324,1326],"[getTypeInfo]"]